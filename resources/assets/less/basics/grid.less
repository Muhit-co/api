/* --- grid system --- */
// custom 'extract' from bootstrap 12-column grid
.row {
  .clearfix;
  max-width: 1100px;
  margin: 0 auto;
}

.row > [class*="col-"] {
  display: inline-block;
  min-height: 10px;
  width: 100%;
  float: left;
  padding-left: 10px;
  padding-right: 10px;
}
.row.row-nopadding > [class*="col-"] {
  padding-left: 0;
  padding-right: 0;
}

/* -- hoooooook -- */
.make-grid(12);

.make-grid(@columns, @i: 0) when (@i =< @columns) {
  @number: @i;
  .row > .col-xs-@{number} {
    width: 100% * @number / 12;
  }
  .row > .col-xs-offset-@{number} {
    margin-left: 100% * @number / 12;
  }
  .row > .col-sm-@{number} {
    width: 100% * @number / 12;
  }
  .row > .col-sm-offset-@{number} {
    margin-left: 100% * @number / 12;
  }
  .row > .col-md-@{number} {
    width: 100% * @number / 12;
  }
  .row > .col-md-offset-@{number} {
    margin-left: 100% * @number / 12;
  }

  @media screen and (max-width: 1000px) {
    .row > .col-md-@{number} {
      width: 100%;
    }
    .row > .col-md-offset-@{number} {
      margin-left: 0;
    }
  }
  @media screen and (max-width: 768px) {
    .row > .col-sm-@{number} {
      width: 100%;
    }
    .row > .col-sm-offset-@{number} {
      margin-left: 0;
    }
  }

  // initiate next iteration
  .make-grid(@columns, (@i + 1));
}